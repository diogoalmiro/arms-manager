extends /layouts/main

block head
    link(rel="stylesheet", href=componentbaseurl+"status-color.css")
    include ./reload
    style. 
        ul#moment {
            display: flex;
            list-style: none;
            position: relative;
            padding: 0;
            justify-content: space-around;
        }

        #moment li {
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: 1fr 1fr;
            padding: 0.5em 2em;
        }

        #moment li span {
            margin: auto;
            background: white;
            text-align: center;
        }

block main
    form.container(action=apibaseurl+'task', method="post") 
        input(style="display: none;",name="task", value=component.task.task, readonly="readonly")
        h4 Task !{component.task.task}
            - let status = component.task.docker ? component.task.docker.State.Status : 'editable'
            span.status.badge.rounded-pill(class=status)= component.task.settings.userPaused ? 'User paused' : status
        h5 Events
        - let moments = [];
        - let add = (name, strdate="0001-01-01T00:00:00Z") => moments.push({name, date: new Date(strdate)})
        - add("Inserted", component.task.settings.uploaded)
        - add("Queued", component.task.docker?.Created)
        - add("Started", component.task.docker?.State.StartedAt)
        - add("Finished", component.task.docker?.State.FinishedAt)
        - let format = new Intl.DateTimeFormat('default', { dateStyle: 'medium', timeStyle: 'medium' });
        ul#moment
            for moment of moments
                li
                    span: b= moment.name
                    span= (!moment.date || (+moment.date) == +new Date("0001-01-01T00:00:00Z")) ? '' : format.format(moment.date)
            li
                span: b Exit Code
                span= component.task.docker ? component.task.docker.State.ExitCode : ''
        h5 Configuration
        .input-group
            label.input-group-text Mail
            input.form-control(value=component.task.settings.mail, name="mail", placeholder="me@example.com")
        .input-group
            label.input-group-text Folder
            input.form-control(value=component.task.settings.folder, readonly, name="folder")
        .input-group
            label.input-group-text Task name
            input.form-control(name="newname", value="", placeholder=`Rename "${component.task.task}"`)
        .form-check
            label.form-check-label
                input.form-check-input(type="checkbox", name="comp", checked=component.task.settings.comp, disabled=!!component.task.docker)
                | Line Segmentation Comparison
        .form-check
            label.form-check-label
                input.form-check-input(type="checkbox", name="prep", checked=component.task.settings.prep, disabled=!!component.task.docker)
                | Additional Preprocessing
        
        span.form-text Dictionaries:
        .langs.form-group.row
            - dicts = ["afr","amh","ara","asm","aze","aze_cyrl","bel","ben","bod","bos","bre","bul","cat","ceb","ces","chi_sim","chi_sim_vert","chi_tra","chi_tra_vert","chr","cos","cym","dan","deu","div","dzo","ell","eng","enm","epo","equ","est","eus","fao","fas","fil","fin","fra","frk","frm","fry","gla","gle","glg","grc","guj","hat","heb","hin","hrv","hun","hye","iku","ind","isl","ita","ita_old","jav","jpn","jpn_vert","kan","kat","kat_old","kaz","khm","kir","kmr","kor","kor_vert","lao","lat","lav","lit","ltz","mal","mar","mkd","mlt","mon","mri","msa","mya","nep","nld","nor","oci","ori","osd","pan","pol","por","pus","que","ron","rus","san","sin","slk","slv","snd","spa","spa_old","sqi","srp","srp_latn","sun","swa","swe","syr","tam","tat","tel","tgk","tha","tir","ton","tur","uig","ukr","urd","uzb","uzb_cyrl","vie","yid","yor"]
            for d of dicts
                label.col-2.form-check-label
                    input.mx-2.form-check-input(type="checkbox", name="lang", checked=component.task.settings.lang.indexOf(d) >= 0, value=d, disabled=!!component.task.docker)
                    | !{d}
        .input-group
            label.input-group-text Priority
            select.form-select(name="priority", disabled=!!component.task.docker)
                option(value="1",selected=component.task.settings.priority==1) Low
                option(value="2", selected=component.task.settings.priority==2) Normal 
                option(value="3", selected=component.task.settings.priority==3) High
        .actions
            // All buttons are submitable, however, only when renaming we hit enter. Enter will submit with the first button.
            button.btn.btn-primary(type="submit", value="save", name="action") Save Settings
            button.btn.btn-danger(type="submit", value="delete", name="action")= component.task.docker ? 'Delete Container' : 'Delete Task'
            if component.task.docker
                if !component.task.settings.userPaused && component.task.docker.State.Status != 'exited'
                    button.btn.btn-warning(type="submit", value="stop", name="action")  Pause
            if !component.task.docker || component.task.settings.userPaused
                button.btn.btn-primary(type="submit", value="run", name="action") Run
        h5 Logs
        div.row
            pre.col-12.col-sm-6= component.task.logs.stdout
            pre.col-12.col-sm-6= component.task.logs.stderr
        details
            summary JSON Debug
            pre= JSON.stringify(component.task.docker, null, "    ")